@model IPagedList<ShowViewModel>
<div class="mytable" style="width: 100%;">
    <table class="table table-bordered table-condensed table-hover table-striped">
        <thead>
            <tr>
                <th>ID
                </th>
                <th>Title
                </th>
                <th>Links
                </th>
                <th>Latest release</th>
                @if (User.Identity.IsAuthenticated) {
                    <th>Subscribe</th>
                }

                <th>Download</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var show in Model) {
                <tr>
                    <td>
                        @show.ShowID
                    </td>
                    <td>
                        <a href="@Url.Action("Show", new { controller = "Show", showID = @show.ShowID })" rel="tooltip" data-placement="top" title="@show.Description.Truncate(256)">@show.Title</a>
                    </td>
                    <td>
                        <a href="@show.IMDb" target="_blank">
                            <img src="~/Content/images/imdb.png" alt="@show.Title" /></a>
                    </td>
                    <td>
                        @{
                var diff = DateTime.Now.Subtract(show.LatestRelease).Days;

                if (diff == 0) {
                            <text>@show.LatestRelease.ToShortDateString() (Today)</text>
                } else if (diff == 1) {
                            <text>@show.LatestRelease.ToShortDateString() (Yesterday)</text>
                } else if (show.LatestRelease == new DateTime(1970, 01, 01)) {
                            <text>No episodes yet</text>
                } else {
                            <text>@show.LatestRelease.ToShortDateString() (@diff days ago)</text>
                }
                        }
                    </td>
                    @if (User.Identity.IsAuthenticated) {
                        <td>
                            @(((UserViewModel) Session["user"]).ShowSubscriptions.Any(x => x.ShowID == show.ShowID) ? Html.ActionLink("Unsubscribe", "Unsubscribe", "User", new { showID = show.ShowID }, new { @class = "btn btn-danger" }) : Html.ActionLink("Subscribe", "Subscribe", "User", new { showID = show.ShowID }, new { @class = "btn btn-success" }))
                        </td>
                    }

                    <td>
                        @Html.ActionLink("Download", "Download", "Show", new { showID = show.ShowID }, new { @class = "btn btn-primary" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagedlist" data-nn-target="#contentlist">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.Classic)
    </div>
</div>